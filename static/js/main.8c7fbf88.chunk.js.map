{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","Link","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","showContactInfo","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","onDeleteClick","delete","onShowContact","_this2","_this$props$contact","name","email","phone","onClick","bind","style","cursor","float","color","marginRight","Contacts","Fragment","Contact_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","About","NotFound","Test","title","body","EditContact","updateContact","match","params","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8c7fbf88.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\"> <i className=\"fas fa-home\"></i> Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\"> <i className=\"fas fa-plus\"></i> Add</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\"> <i className=\"fas fa-question\"></i> About</Link>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\nexport default Header;","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n        return {\r\n            ...state,\r\n            contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n        }\r\n        break;\r\n        case 'SHOW_CONTACT':\r\n        return {\r\n            ...state,\r\n            showContactInfo: !state.showContactInfo\r\n        }\r\n        break;\r\n        case 'ADD_CONTACT':\r\n        return {\r\n            ...state,\r\n            contacts: [action.payload, ...state.contacts, ]\r\n        }\r\n        break;\r\n        case 'UPDATE_CONTACT':\r\n        return {\r\n            ...state,\r\n            contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n        }\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [\r\n            // {\r\n            //     id: 1,\r\n            //     name: 'John Doe',\r\n            //     email: 'doe@gmail.com',\r\n            //     phone: '233-3365-453'\r\n            // },\r\n            // {\r\n            //     id: 2,\r\n            //     name: 'Karren Will',\r\n            //     email: 'will@gmail.com',\r\n            //     phone: '9332-3365-453'\r\n            // },\r\n            // {\r\n            //     id: 3,\r\n            //     name: 'Henry Josh',\r\n            //     email: 'joe@gmail.com',\r\n            //     phone: '233-3365-453'\r\n            // }\r\n        ],\r\n        showContactInfo: false,\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n        this.setState({contacts: res.data});\r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Contact extends Component {\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        dispatch({type: 'DELETE_CONTACT', payload: id})\r\n    }\r\n    onShowContact = (dispatch) => {\r\n        dispatch({type: 'SHOW_CONTACT'})\r\n    }\r\n  render() {\r\n      const { name, email, phone, id } = this.props.contact;\r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                const { dispatch, showContactInfo } = value\r\n                return (\r\n                    <div className=\"card card-body mb-3\">\r\n                    <h4>{name} <i onClick={this.onShowContact.bind(this, dispatch)} className=\"fas fa-sort-down\"\r\n                    style={{ cursor: 'pointer'}}></i>\r\n                    <i className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right',  color: 'red'}}\r\n                    onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n\r\n                    <Link to={`contact/edit/${id}`}>\r\n                    <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                        cursor: 'pointer',\r\n                        float: 'right',\r\n                        color: 'black',\r\n                        marginRight: '1rem'\r\n                    }}></i>\r\n                    </Link>\r\n                    </h4>\r\n                    { showContactInfo ? (\r\n                        <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">Email: {email}</li>\r\n                        <li className=\"list-group-item\">Phone: {phone}</li>\r\n                    </ul>\r\n                    ) : null}\r\n                  </div>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n}\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nexport default class Contacts extends Component {\r\n\r\n  render() {\r\n      return (\r\n          <Consumer>\r\n              {value => {\r\n                  const { contacts } = value;\r\n                  return (\r\n                    <React.Fragment>\r\n                        <h1 className=\"display-4 mb-2\">\r\n                        <span className=\"text-danger\">Contact </span> List\r\n                        </h1>\r\n                    {contacts.map(contact =>\r\n                    <Contact\r\n                    key={contact.id}\r\n                    contact={contact}\r\n                    />)}\r\n                  </React.Fragment>\r\n                  )\r\n              }}\r\n          </Consumer>\r\n      )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n    <label htmlFor={name}>{label}</label>\r\n    <input\r\n    type={type}\r\n    name={name}\r\n    className={classnames(\"form-control form-control-lg\", {\r\n        'is-invalid': error\r\n    })}\r\n    placeholder={placeholder}\r\n    value={value}\r\n    onChange={onChange}\r\n    />\r\n    {error && <div className=\"invalid-feedback\">\r\n    {error}</div> }\r\n\r\n</div>\r\n  )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check for errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required'}});\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is required'}});\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n        const newContact =  {\r\n            // id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        // dispatch({type: 'ADD_CONTACT', payload: newContact});\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n\r\n        dispatch({type: 'ADD_CONTACT', payload: res.data})\r\n\r\n        //Clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/')\r\n    }\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  render() {\r\n      const { name, email, phone, errors } = this.state;\r\n\r\n      return (\r\n          <Consumer>\r\n              {value => {\r\n                  const { dispatch } = value;\r\n                  return (\r\n                    <div className=\"card mb-3\">\r\n                      <div className=\"card-header\">Add Contact</div>\r\n                      <div className=\"card-body\">\r\n                          <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                            <TextInputGroup\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            placeholder=\"Enter name...\"\r\n                            value={name}\r\n                            onChange={this.onChange}\r\n                            error={errors.name}\r\n                             />\r\n                             <TextInputGroup\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Enter email...\"\r\n                            value={email}\r\n                            onChange={this.onChange}\r\n                            error={errors.email}\r\n                             />\r\n                             <TextInputGroup\r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            placeholder=\"Enter phone...\"\r\n                            value={phone}\r\n                            onChange={this.onChange}\r\n                            error={errors.phone}\r\n                             />\r\n                              <input\r\n                               type=\"submit\"\r\n                               value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\r\n                          </form>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n              }}\r\n          </Consumer>\r\n      )\r\n\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple App to manage Contacts</p>\r\n      <div className=\"text secondary\">Version 1.0.0</div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  }\r\n  // componentDidMount() {\r\n  //   //console.log(\"did mount\");\r\n  //   fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n  // .then(response => response.json())\r\n  // .then(data => this.setState({\r\n  //   title: data.title,\r\n  //   body: data.body\r\n  // }))\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <h1>Test Component</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check for errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required'}});\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is required'}});\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n        const updateContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.put(`http://jsonplaceholder.typicode.com/users/${id}`, updateContact);\r\n\r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data})\r\n        //Clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/')\r\n    }\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  render() {\r\n      const { name, email, phone, errors } = this.state;\r\n\r\n      return (\r\n          <Consumer>\r\n              {value => {\r\n                  const { dispatch } = value;\r\n                  return (\r\n                    <div className=\"card mb-3\">\r\n                      <div className=\"card-header\">Edit Contact</div>\r\n                      <div className=\"card-body\">\r\n                          <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                            <TextInputGroup\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            placeholder=\"Enter name...\"\r\n                            value={name}\r\n                            onChange={this.onChange}\r\n                            error={errors.name}\r\n                             />\r\n                             <TextInputGroup\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Enter email...\"\r\n                            value={email}\r\n                            onChange={this.onChange}\r\n                            error={errors.email}\r\n                             />\r\n                             <TextInputGroup\r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            placeholder=\"Enter phone...\"\r\n                            value={phone}\r\n                            onChange={this.onChange}\r\n                            error={errors.phone}\r\n                             />\r\n                              <input\r\n                               type=\"submit\"\r\n                               value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\r\n                          </form>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n              }}\r\n          </Consumer>\r\n      )\r\n\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Header from './components/layout/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Contacts from './components/contacts/Contacts';\n\nimport { Provider } from './context';\nimport AddContact from './components/contacts/AddContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport EditContact from './components/contacts/EditContact';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n        <div className=\"App\">\n        <Header branding=\"Contact Manager\"/>\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={Contacts} />\n            <Route exact path=\"/contact/add\" component={AddContact} />\n            <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n            <Route exact path=\"/about\" component={About}/>\n            <Route path=\"/test\" component={Test}/>\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}